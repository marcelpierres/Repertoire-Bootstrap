/*Variable overrides*/
$body-bg: rgba(0, 123, 255, 0.35);
/* $TEST:    this is a variable */
$colours: (
  main: #00b4fb
);

body,
html {
  height: 100%;
}
body {
  margin: 0;
  #container {
    -webkit-clip-path: polygon(49% 0, 100% 34%, 100% 100%, 0 100%, 0 0);
    clip-path: polygon(49% 0, 100% 34%, 100% 100%, 0 100%, 0 0);
    background-color: map-get($colours, main);
    width: 100%;
    height: 100%;
    position: absolute;
    z-index: 0;
  }
  .col-centered {
    float: none;
    margin: 0 auto;
  }
  .row {
    z-index: 1;
    position: absolute;
    left: 10px;
    top: 30%;
    width: 100%;
  }
  .card {
    border: 2px solid rgb(219, 219, 219);
  }
  .card-title {
    text-align: center;
    letter-spacing: 5px;
    font-weight: 700;
  }
  .card-status {
    text-align: center;
    letter-spacing: 2px;
  }
  .images {
    display: inline-block;
    padding: 7px;
    margin-top: 0px;
  }
  .fade-in {
    @-webkit-keyframes fadeIn {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }
    @-moz-keyframes fadeIn {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }
    @keyframes fadeIn {
      from {
        opacity: 0;
      }
      to {
        opacity: 1;
      }
    }
    opacity: 0;
    /* make things invisible upon start */
    -webkit-animation: fadeIn ease-in 1; /* call our keyframe named fadeIn, use animattion ease-in and repeat it only 1 time */
    -moz-animation: fadeIn ease-in 1;
    animation: fadeIn ease-in 1;
    -webkit-animation-fill-mode: forwards;
    /* this makes sure that after animation is done we remain at the last keyframe value (opacity: 1) */
    -moz-animation-fill-mode: forwards;
    animation-fill-mode: forwards;
    -webkit-animation-duration: 1s;
    -moz-animation-duration: 1s;
    animation-duration: 1s;
    -webkit-animation-delay: 0.7s;
    -moz-animation-delay: 0.7s;
    animation-delay: 0.7s;
  }
}
// Bootstrap Sass Imports
@import "node_modules/bootstrap/scss/bootstrap";
